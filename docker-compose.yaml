version: "3.9"  # Updated to use a newer version

services:
  # PHP service
  php:
    build:
      context: .
      dockerfile: ./.docker/web/Dockerfile   # Use the Dockerfile located in the web folder
    container_name: laravel_php
    volumes:
      - ./www:/var/www/html                   # Map the www directory to the container's working directory
      - ./vendor:/var/www/vendor              # Vendor mapping for Composer dependencies
      - ./.docker/php/php.ini:/usr/local/etc/php/php.ini  # Optional: Add PHP configuration if needed
    ports:
      - "9000:9000"                           # Port for PHP-FPM (used by Nginx/Apache)
    networks:
      - laravel
    environment:
      # Define environment variables directly here if needed
      MYSQL_DATABASE: laravel                 # Replace with your actual database name
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: password           # Root password for MySQL
    depends_on:
      - mariadb

  # Web server service (Nginx/Apache)
  web:
    build:
      context: .
      dockerfile: ./.docker/web/Dockerfile    # Use the Dockerfile inside the web folder
    container_name: laravel_web
    volumes:
      - ./www:/var/www/html                   # Map the www directory to the container's working directory
      - ./vendor:/var/www/vendor
      - ./docker/web/nginx.conf:/etc/nginx/conf.d/default.conf  # Nginx configuration (create if using Nginx)
    ports:
      - "80:80"                               # Port for the web server
    networks:
      - laravel
    depends_on:
      - php

  # MariaDB service for database
  mariadb:
    image: mariadb:10.4
    container_name: laravel_db
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: dtt_assessment
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_ROOT_HOST: '%'
    ports:
      - "3307:3306"                           # Map the MySQL port (adjust if needed)
    volumes:
      - dbdata:/var/lib/mysql                 # Named volume for persistent storage
    networks:
      - laravel
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s

  # MailHog service for testing emails (optional)
  mailhog:
    image: mailhog/mailhog
    container_name: laravel_mailhog
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI
    networks:
      - laravel

  # phpMyAdmin service for managing MySQL (optional)
  phpmyadmin:
    image: phpmyadmin
    container_name: laravel_phpmyadmin
    ports:
      - "8000:80"
    environment:
      PMA_ARBITRARY: 1
      PMA_HOST: mariadb
    volumes:
      - ./.docker/phpmyadmin/config.user.inc.php:/etc/phpmyadmin/config.user.inc.php
    depends_on:
      - mariadb
    networks:
      - laravel

# Named volumes for persistent data storage
volumes:
  dbdata:

# Define custom network for service communication
networks:
  laravel:
    driver: bridge
